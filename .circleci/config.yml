version: 2
jobs:
  build:
    docker:
    - image: circleci/node:8
      environment:
        NPM_CONFIG_PREFIX: "~/.npm-global"

    working_directory: ~/repo

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v5-dependencies-{{ checksum "package-lock.json" }}
    - run:
        name: Set up global NPM
        command: mkdir ~/.npm-global

    - run:
        name: install npm 6.4.0
        command: sudo npm -g install npm@6.4.0

    - run:
        name: Install Dependencies
        command: npm install

    - save_cache:
        paths:
        - node_modules
        key: v5-dependencies-{{ checksum "package-lock.json" }}

    - run:
        name: Lint
        command: npm run lint

    # run tests!
    - run: mkdir junit
    - run:
        name: prepare test git user
        command: git config --global user.email "you@example.com" && git config --global user.name "CircleCi Build"
    - run:
        name: Running Tests
        command: npx mocha test/unit --exit --reporter mocha-junit-reporter
        environment:
          MOCHA_FILE: junit/test-results.xml
        when: always


    # get code coverage
    - run:
        name: Getting Code Coverage
        command: npx istanbul cover ./node_modules/mocha/bin/_mocha test/unit -- --exit -R spec && npx codecov
        environment:
          MOCHA_FILE: junit/test-results.xml
        when: always

    - store_test_results:
        path: junit

    - store_artifacts:
        path: junit

  publish-pre-release:
    docker:
    # specify the version you desire here
    - image: circleci/node:8

    working_directory: ~/repo

    steps:
    - checkout

    - restore_cache:
        keys:
        - v5-dependencies-{{ checksum "package-lock.json" }}

    - add_ssh_keys:
        fingerprints:
        - "45:a8:94:3d:a9:dc:cf:dd:ac:3a:9a:d3:18:c8:ea:dc"

    - run:
        name: prepare test git user
        command: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"

    - run:
        name: install npm 6.4.0
        command: sudo npm -g install npm@6.4.0

    - run:
        name: install
        command: npm install

    - run:
        name: revert changes to package-lock.json
        command: git checkout -- package-lock.json

    - run:
        name: configure npm registry
        command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

    - run:
        name: version pre-release
        command: npm version prerelease --preid=pre -m "Release %s [ci skip]"

    # unfortunately we cannot create a release commit with no tag with `npm version`, so we need to delete it here again
    - run:
        name: delete pre-release tag
        command: npm run delete-git-tag

    - run:
        name: publish pre-release
        command: npm publish --tag next --access public

workflows:
  version: 2
  build:
    jobs:
    # run build on any branch
    - build

    # publish pre-releases on master
    - publish-pre-release:
        requires:
        - build
        filters:
          branches:
            only: master
